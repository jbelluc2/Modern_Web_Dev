{"version":3,"sources":["environments.js","Components/Auth/ProtectedRoute.js","Services/LearnService.js","Components/Main/MainList.js","Components/Main/Child.js","Components/Main/Form.js","Components/Elements/Header.js","Services/LearnServiceUser.js","Components/Auth/Auth.js","Components/Main/Login.js","Components/Main/MainHeader.js","Components/Main/generateGreeting.js","Components/Main/MainGood.js","Components/Main/MainHome.js","Components/Components.js","App.js","index.js"],"names":["module","exports","APPLICATION_ID","JAVASCRIPT_KEY","SERVER_URL","ProtectedRoute","component","flag","rest","console","log","to","getAllTasks","Task","Parse","Object","extend","Query","find","then","result","removeTask","id","get","task","destroy","createDay","date","day","set","save","MainList","useState","tasks","setTasks","setTask","useEffect","getById","remove","setRemove","length","newTasks","filter","map","class","onClick","e","Child","data","onChildClick","href","Form","props","className","handleClose","content","Header","title","children","document","getCurrentUser","currentUser","User","current","getUsername","verifyUser","user","temp","authenticated","this","cb","Login","history","useHistory","Username","setUsername","Password","setPassword","Email","setEmail","isOpen","setIsOpen","togglePopup","onUsernameChange","preventDefault","target","value","onPasswordChange","type","name","placeholder","onChange","username","password","logIn","loggedInUser","catch","error","push","email","signUp","createUser","alert","MainHeader","setName","location","setLocation","dateOf","setDate","time","setTime","frequency","setFrequency","add","setAdd","Date","toLocaleDateString","greeting","greetingArray","Math","floor","random","getGreeting","createTask","newTask","for","required","MainGood","MainHome","setFlag","check","good","logOut","exact","path","Components","componenet","initialize","Env","serverURL","App","rootElement","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.e18d4dce.chunk.js","sourcesContent":["module.exports = {\n    APPLICATION_ID: \"0HUraeAEcQvv4cTFlOlIoAK4PFlMKWCArsetF5Vq\",\n    JAVASCRIPT_KEY: \"ZStQjIGhuxOsThD302KvzuijiID6oJ0SDkmaHqIz\",\n    SERVER_URL: \"https://parseapi.back4app.com/\"\n};","import React from \"react\";\r\nimport { Redirect, useHistory } from \"react-router-dom\";\r\n\r\n// You can pass props using the spread operator to throw them on an object if there are too many to break out\r\nconst ProtectedRoute = ({ component: Component, flag, ...rest }) => {\r\n  //const history = useHistory();\r\n  \r\n  console.log(rest); // show rest.path in the console\r\n  console.log(\"Flag in protected route\", flag);\r\n  // you could redirect back to /auth if the flag is not true\r\n  return (\r\n    <div>\r\n      {flag ? (\r\n        <Redirect to={\"/home\"} />\r\n      ) : (\r\n        <Redirect to={\"/login\"} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import Parse from \"parse\";\r\n\r\n// CREATE ACTION - new task\r\nexport const createTask = (name, location, date, time, frequency) => {\r\n  console.log(\"Creating: \", name);\r\n  console.log(name, location, date, time, frequency);\r\n  const Task = Parse.Object.extend(\"Task\");\r\n  const task = new Task();\r\n  const temp = createDay(date);\r\n  console.log(\"The day object\", temp);\r\n  task.set(\"name\", name);\r\n  task.set(\"location\", location);\r\n  task.set(\"date\", date);\r\n\r\n  // This is our issue. We need to pass a pointer to the database\r\n  // but we can only figure out how to pass an object. Once we get \r\n  // this resolved, our data will be fully functioning and linked \r\n  // properly\r\n  //task.set(\"Day\", temp);\r\n  task.set(\"time\", time);\r\n  task.set(\"frequency\", frequency);\r\n  return task.save().then((result) => {\r\n    return result;\r\n  });\r\n};\r\n\r\nexport const getAllTasks = () => {\r\n  const Task = Parse.Object.extend(\"Task\");\r\n  const query = new Parse.Query(Task);\r\n  return query.find().then((result) => {\r\n    return result;\r\n  });\r\n};\r\n\r\n// DELETE operation - remove lesson by ID\r\nexport const removeTask = (id) => {\r\n  const Task = Parse.Object.extend(\"Task\");\r\n  const query = new Parse.Query(Task);\r\n  return query.get(id).then((task) => {\r\n    task.destroy();\r\n  });\r\n};\r\n\r\n// READ operation - get lesson by ID\r\nexport const getById = (id) => {\r\n  const Task = Parse.Object.extend(\"Task\");\r\n  const query = new Parse.Query(Task);\r\n  return query.get(id).then((result) => {\r\n    // return Lesson object with objectId: id\r\n    return result;\r\n  });\r\n};\r\n\r\n// CREATE ACTION - new task\r\nexport const createDay = (date) => {\r\n  console.log(\"Creating: \", date);\r\n  const Day = Parse.Object.extend(\"Day\");\r\n  const day = new Day();\r\n  day.set(\"date\", date);\r\n  return day.save().then((result) => {\r\n    return result;\r\n  });\r\n};\r\n\r\nexport const getAllDays = () => {\r\n  const Day = Parse.Object.extend(\"Day\");\r\n  const query = new Parse.Query(Day);\r\n  return query.find().then((result) => {\r\n    return result;\r\n  });\r\n};\r\n\r\n// READ operation - get lesson by ID\r\nexport const getDayById = (id) => {\r\n  const Day = Parse.Object.extend(\"Day\");\r\n  const query = new Parse.Query(Day);\r\n  return query.get(id).then((result) => {\r\n    // return Lesson object with objectId: id\r\n    return result;\r\n  });\r\n};","import React, { useEffect, useState } from \"react\";\r\nimport { getAllTasks, getById, removeTask } from \"../../Services/LearnService.js\";\r\n\r\nconst MainList = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [task, setTask] = useState([]);\r\n\r\n  // UseEffect to run when the page loads to\r\n  // obtain async data and render\r\n  \r\n  useEffect(() => {\r\n    getAllTasks().then((tasks) => {\r\n      setTasks(tasks);\r\n    });\r\n\r\n    getById(\"NAaOiKBukL\").then((task) => {\r\n      console.log(task);\r\n      setTask(task);\r\n    });\r\n  }, []);\r\n\r\n  // Flags in the state to watch for add/remove updates\r\n  const [remove, setRemove] = useState(\"\");\r\n  \r\n  useEffect(() => {\r\n    \r\n    // Check if remove state variable is holding an ID\r\n    if (remove.length > 0) {\r\n      //Filter the old lessons list to take out selected lesson\r\n      const newTasks = tasks.filter((task) => task.id !== remove);\r\n      setTasks(newTasks);\r\n\r\n      removeTask(remove).then(() => {\r\n        console.log(\"Removed task with ID: \", remove);\r\n      });\r\n      // Reset remove state variable\r\n      setRemove(\"\");\r\n    }\r\n  }, [tasks, remove]);\r\n\r\n\r\n  return (\r\n    <div>\r\n      {tasks.length > 0 && (\r\n        <ul>\r\n          {tasks.map((task) => (\r\n            <div class=\"align\">\r\n             <span>\r\n               <button class=\"button\" onClick={(e) => {\r\n                  setRemove(task.id);\r\n                }}\r\n              ><span class=\"checkmark\"></span>\r\n             </button>\r\n            <li key={task.id} class=\"test\"> \r\n              {task.get(\"name\")} | {task.get(\"location\")} | {task.get(\"time\")}\r\n            </li>{\" \"}\r\n            </span>\r\n          </div>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainList;\r\n","import React from \"react\";\n\nexport default function Child({ data, onChildClick }) {\n  return (\n    <div class=\"child\">\n      <a href=\"index.html\" class=\"button\" onClick={onChildClick}>{data}</a>\n    </div>\n  );\n}\n\n","import React from \"react\";\n\nconst Form = props => {\n  console.log(\"the Form function works\");\n  return (\n    <div className=\"popup-box\">\n      <div className=\"box\">\n        <span className=\"close-icon\" onClick={props.handleClose}>x</span>\n        {props.content}\n      </div>\n    </div>\n  );\n};\n\nexport default Form;","import React, { useEffect } from \"react\";\r\n  \r\n  export function Header({ title, children }) {\r\n    useEffect(() => {\r\n      document.title = title;\r\n    }, [title]);\r\n  \r\n    return (\r\n      <header>\r\n        <h1>{title}</h1>\r\n        <h3>{children}</h3>\r\n      </header>\r\n    );\r\n  }\r\n  ","import Parse from \"parse\";\n\nexport function loginUser(username, password){\n    return Parse.User.logIn(username, password).then((loggedInUser) => {\n        //if (typeof document !== 'undefined') document.write(`Logged in user: ${JSON.stringify(user)}`);\n        // alert(\n        //   `User ${loggedInUser.getUsername()} has successfully signed in!`,\n        // );\n        // const currentUser = await Parse.User.current();\n        // console.log(loggedInUser === currentUser);\n        //console.log('Valid is set to true');\n        //valid = true;\n        //return true;\n      }).catch((error) => {\n        //if (typeof document !== 'undefined') document.write(`Error while logging in user: ${JSON.stringify(error)}`);\n        console.error('Error while logging in user', error);\n        //console.log('Valid is set to false');\n        //valid = false;\n        // alert(`${error.message}`);\n        //return false;\n      });\n}\n\nexport const getCurrentUser = () => {\n  var currentUser = Parse.User.current();\n    if (currentUser !== null) {\n      return currentUser.getUsername();\n    }\n    return false;\n}\n\nexport const logOutUser = () => {\n  Parse.User.logOut();\n  console.log(\"Logged Out!\");\n}\n\nexport const verifyUser = () => {\n    var user = Parse.User.current();\n    if (user === null){\n        return false;\n    }\n    console.log(\"Current\", user);\n    console.log(\"Current user:\", user.getUsername());\n    var temp = user.authenticated();\n    console.log(\"User is authenticated:\", temp);\n    return user.authenticated();\n}\n\nexport const createUser = (username, password, email) => {\n    const user = new Parse.User()\n    user.set('username', username);\n    user.set('email', email);\n    user.set('password', password);\n\n    user.signUp().then((user) => {\n    //if (typeof document !== 'undefined') document.write(`User signed up: ${JSON.stringify(user)}`);\n    console.log('User signed up', user);\n    }).catch(error => {\n    //if (typeof document !== 'undefined') document.write(`Error while signing up user: ${JSON.stringify(error)}`);\n    console.error('Error while signing up user', error);\n    });\n}","class Auth {\r\n    constructor() {\r\n      this.authenticated = false;\r\n    }\r\n  \r\n    login(cb) {\r\n      this.authenticated = true;\r\n      cb();\r\n    }\r\n  \r\n    logout(cb) {\r\n      this.authenticated = false;\r\n      cb();\r\n    }\r\n  \r\n    isAuthenticated() {\r\n      return this.authenticated;\r\n    }\r\n  }\r\n  \r\n  export default new Auth();\r\n  ","import React, { useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport Form from \"./Form\";\r\nimport { Header } from \"../Elements/Header.js\";\r\nimport { createUser, loginUser } from \"../../Services/LearnServiceUser.js\";\r\nimport Parse from \"parse\";\r\nimport auth from \"../Auth/Auth.js\";\r\n\r\nexport default function Login() {\r\n  \r\n  const history = useHistory();\r\n\r\n  const [Username, setUsername] = useState();\r\n  const [Password, setPassword] = useState();\r\n  const [Email, setEmail] = useState();\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const togglePopup = () => {\r\n    setIsOpen(!isOpen);\r\n  }\r\n\r\n  // Handler to track changes to the child input text\r\n  const onUsernameChange = (e) => {\r\n    e.preventDefault();\r\n    // Continuously updating name to be added on submit\r\n    setUsername(e.target.value);\r\n  };\r\n\r\n  const onPasswordChange = (e) => {\r\n    e.preventDefault();\r\n    // Continuously updating name to be added on submit\r\n    setPassword(e.target.value);\r\n  };\r\n\r\n  const onEmailChange = (e) => {\r\n    e.preventDefault();\r\n    // Continuously updating name to be added on submit\r\n    setEmail(e.target.value);\r\n  };\r\n\r\n  const onLogInClick = (e) => {\r\n    e.preventDefault();\r\n    loginUser(Username, Password).then(()=> {\r\n      // console.log(\"Checking from auth: \", check);\r\n    console.log(Parse.User.current());\r\n    history.push(\"/home\");\r\n    })\r\n    \r\n  }\r\n\r\n  const onSignupClick = () => {\r\n    createUser(Username, Password, Email);\r\n    alert(\"Account was created!\");\r\n  }\r\n\r\n  return (\r\n    <section>\r\n      <div class=\"centered\">\r\n        <h1 class=\"login\">LOGIN</h1>\r\n        <br />\r\n        <form>\r\n        <input type=\"text\" id=\"username\" name=\"username\" placeholder=\"username\" onChange={onUsernameChange}/>\r\n        <br />\r\n        <input type=\"password\" id=\"password\" name=\"password\" placeholder=\"password\" onChange={onPasswordChange}/> \r\n        <br /> <br />\r\n        <button class=\"button2\" onClick={onLogInClick}>LOGIN</button>\r\n        </form>\r\n        <button class=\"button3\" onClick={togglePopup}>CREATE ACCOUNT</button>\r\n      </div>\r\n        {isOpen && <Form \r\n        content={<> \r\n        <div>\r\n          <Header title=\"New Account\">\r\n            Please fill out the following:\r\n          </Header>\r\n          <input type=\"text\" id=\"username\" name=\"username\" placeholder=\"username\" onChange={onUsernameChange}/>\r\n          <br />\r\n          <input type=\"password\" id=\"password\" name=\"password\" placeholder=\"password\" onChange={onPasswordChange}/> \r\n          <br />\r\n          <input type=\"text\" id=\"email\" name=\"email\" placeholder=\"email\" onChange={onEmailChange}/> \r\n          <br />\r\n          <button class=\"button2\" onClick={onSignupClick}>CREATE ACCOUNT<span class=\"plusIcon\"></span></button>\r\n        </div>\r\n      </>}\r\n      handleClose={togglePopup}\r\n    />}\r\n    </section>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { getGreeting } from \"./generateGreeting.js\";\r\nimport Child from \"./Child.js\";\r\nimport Form from \"./Form\";\r\nimport Username from \"./Login.js\";\r\nimport \"../../styles/index.css\";\r\nimport { Header } from \"../Elements/Header.js\";\r\nimport { createTask, getAllTasks, getById, removeTask } from \"../../Services/LearnService.js\";\r\nimport { getCurrentUser } from \"../../Services/LearnServiceUser.js\";\r\n// import header\r\n\r\nconst MainHeader = () => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    const togglePopup = () => {\r\n      setIsOpen(!isOpen);\r\n    }\r\n\r\n    const [name, setName] = useState();\r\n    const [location, setLocation] = useState();\r\n    const [dateOf, setDate] = useState();\r\n    const [time, setTime] = useState();\r\n    const [frequency, setFrequency] = useState();\r\n\r\n    const [add, setAdd] = useState(false);\r\n    const [tasks, setTasks] = useState([]);\r\n    const [task, setTask] = useState([]);\r\n    const [remove, setRemove] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n      getAllTasks().then((tasks) => {\r\n        setTasks(tasks);\r\n      });\r\n  \r\n      /*getById(\"NAaOiKBukL\").then((task) => {\r\n        setTask(task);\r\n      });*/\r\n    }, []);\r\n\r\n    var date = new Date().toLocaleDateString();\r\n    var greeting = getGreeting();\r\n\r\n    useEffect(() => {\r\n      // Check for add flag and make sure name state variable is defined\r\n    if (name && add) {\r\n      createTask(name, location, dateOf, time, frequency).then((newTask) => {\r\n        setAdd(false);\r\n        // Add the newly created lesson to the lessons array\r\n        // to render the new list of lessons (thru spread/concatination)\r\n        setTasks([...tasks, newTask]);\r\n    });\r\n  }\r\n// Check if remove state variable is holding an ID\r\nif (remove.length > 0) {\r\n  //Filter the old lessons list to take out selected lesson\r\n  const newTasks = tasks.filter((task) => task.id !== remove);\r\n  setTasks(newTasks);\r\n\r\n  removeTask(remove).then(() => {\r\n    console.log(\"Removed lesson with ID: \", remove);\r\n  });\r\n  // Reset remove state variable\r\n  setRemove(\"\");\r\n}\r\n}, [name, tasks, add, remove]);\r\n\r\n  // Handler to handle event passed from child submit button\r\n  const onClickHandler = (e) => {\r\n    e.preventDefault();\r\n    // Trigger add flag to create lesson and\r\n    // re-render list with new lesson\r\n    \r\n    setAdd(true);\r\n    alert(\"Task Submitted\");\r\n  };\r\n\r\n    // Handler to track changes to the child input text\r\n    /*const onChangeHandler = (e) => {\r\n      e.preventDefault();\r\n      console.log(e.target.value);\r\n      // Continuously updating name to be added on submit\r\n      setName(e.target.value);\r\n    };*/\r\n\r\n      // Handler to track changes to the child input text\r\n      const onNameChange = (e) => {\r\n        e.preventDefault();\r\n        // Continuously updating name to be added on submit\r\n        setName(e.target.value);\r\n      };\r\n      \r\n      // Handler to track changes to the child input text\r\n      const onLocationChange = (e) => {\r\n        e.preventDefault();\r\n        // Continuously updating name to be added on submit\r\n        setLocation(e.target.value);\r\n      };\r\n      \r\n      // Handler to track changes to the child input text\r\n      const onDateChange = (e) => {\r\n        e.preventDefault();\r\n        // Continuously updating name to be added on submit\r\n        setDate(e.target.value);\r\n      };\r\n      \r\n      // Handler to track changes to the child input text\r\n      const onTimeChange = (e) => {\r\n        e.preventDefault();\r\n        // Continuously updating name to be added on submit\r\n        setTime(e.target.value);\r\n      };\r\n      // Handler to track changes to the child input text\r\n      const onFrequencyChange = (e) => {\r\n        e.preventDefault();\r\n        // Continuously updating name to be added on submit\r\n        setFrequency(e.target.value);\r\n      };\r\n\r\n      // State variable that will hold username value\r\n      const [username, setUsername] = useState('');\r\n      useEffect(() => {\r\n          if (username === '') {\r\n              setUsername(getCurrentUser);\r\n          }\r\n        }\r\n      , [username]);\r\n      console.log(\"USERNAME IS: \", username);\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <h1>{greeting}, {username}!</h1>\r\n        <h2>{date}</h2>\r\n      </div>\r\n      <div class=\"topcorner\">\r\n        <button class=\"button\" onClick={togglePopup}><span class=\"plusIcon\"></span></button>\r\n      </div>\r\n      {isOpen && <Form \r\n        content={<> \r\n        <div>\r\n    <Header title=\"New task\">\r\n      Please fill out the following:\r\n    </Header>\r\n\r\n    <form>\r\n      <label for=\"taskTitle\"> Title: </label>\r\n      <input type=\"text\" id=\"taskTitle\" name=\"taskTitle\" placeholder=\"Sign Declaration of Independence\" required=\"\" onChange={onNameChange}/>\r\n\r\n      <label for=\"taskLocation\"> Location: </label>\r\n      <input type=\"text\" id=\"taskLocation\" name=\"taskLocation\" placeholder=\"Philadelphia\" onChange={onLocationChange}/>\r\n\r\n      <label> Date: </label>\r\n      <input type=\"text\" id=\"taskDate\" name=\"taskDate\" placeholder=\"July, 4th 1776\" required=\"\" onChange={onDateChange}/>\r\n\r\n      <label> Time: </label>\r\n      <input type=\"text\" id=\"taskTime\" name=\"taskTime\" placeholder=\"All Day\" onChange={onTimeChange}/>\r\n\r\n      <label> Frequency: </label>\r\n      <input type=\"text\" id=\"taskFrequency\" name=\"taskFrequency\" placeholder=\"Once\" onChange={onFrequencyChange}/>\r\n      <br /><br />\r\n      <Child data=\"Submit\" onChildClick={onClickHandler} />\r\n    </form>\r\n  </div>\r\n      </>}\r\n      handleClose={togglePopup}\r\n    />}\r\n    </div>\r\n  );\r\n};\r\nexport default MainHeader;\r\n","export function getGreeting(){\r\n    var greetingArray = [\r\n        'Howdy',\r\n        'Hi',\r\n        'Welcome back',\r\n        'Hola',\r\n        'Bonjour',\r\n        'Hey',\r\n        'Yo',\r\n        'Hello',\r\n        \"Nice to see you\",\r\n        \"Looking good\",\r\n        \"What's up\",\r\n        \"G'day\",\r\n        \"What's happening\",\r\n        \"Hey there\",\r\n        \"Ahoy\",\r\n        \"Hiya\",\r\n        \"Top of the mornin'\",\r\n        \"What's cracking\",\r\n        \"'Sup\",\r\n        \"What's good\",\r\n        \"Whaddup\",\r\n        \"Greetings\",\r\n        \"'Ello\",\r\n        \"Hello there\",\r\n        \"Aloha\",\r\n        \"Que pasa\",\r\n        \"Ciao\",\r\n        \"Konnichiwa\",\r\n        \"Long-time no see\",\r\n        \"Good to see you\",\r\n        \"Heyyy\"\r\n    ]\r\n    var randomIndex = Math.floor(Math.random() * greetingArray.length); \r\n    var randomGreeting = greetingArray[randomIndex];\r\n    return randomGreeting;\r\n}","import MainList from \"./MainList\";\r\nimport MainHeader from \"./MainHeader\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nconst MainGood = () => {\r\n    return (\r\n    <div>\r\n      <MainHeader />\r\n      <MainList />\r\n    </div>\r\n    );\r\n  };\r\n  \r\n  export default MainGood;\r\n  \r\n  ","import React, { useEffect, useState } from \"react\";\r\nimport ProtectedRoute from \"../Auth/ProtectedRoute\";\r\nimport MainGood from \"./MainGood\";\r\nimport Parse from \"parse\";\r\nimport { getCurrentUser, verifyUser, loginUser, logOutUser } from \"../../Services/LearnServiceUser.js\";\r\n\r\nconst MainHome = () => {\r\n  const [flag, setFlag] = useState(false);\r\n  //var Username = document.getElementById(\"username\").value;\r\n  \r\n // var Password = document.getElementById(\"password\").value;\r\n  //console.log(\"Username: \", Username);\r\n  //console.log(\"Password: \", Password);\r\n\r\n  // I THINK THIS IS WHERE WE CHECK IF USER EXISTS\r\n  //var checked = verifyUser();\r\n  \r\n  //var checked = loginUser(Username, Password);\r\n  //console.log(checked);\r\n  //console.log(\"Check: \", checked);\r\n  //console.log(\"Check2: \", Boolean(checked));\r\n  const check = verifyUser();\r\n\r\n  useEffect(() => {\r\n    console.log(\"Verify User before\", verifyUser());\r\n    console.log(\"Check in useEffect:\", check);\r\n    if (check) {\r\n      console.log(\"User Verified!\");\r\n      console.log(Parse.User.current());\r\n      setFlag(check);\r\n      console.log(\"flag should have just been set to be true, flag is actually:\", flag);\r\n    } else {\r\n      console.log(\"User Not Verified!\");\r\n      setFlag(false);\r\n    }\r\n  }, [check]);\r\n\r\n  //var currentUser = Parse.User.current().getUsername();\r\n  //console.log(\"Current User =\", currentUser);\r\n  var good = false;\r\n  if (Parse.User.current() === null){\r\n    good = false;\r\n    console.log(\"User does not exist\");\r\n    } else {\r\n      good = true;\r\n      console.log(Parse.User.current().getUsername(), \"user logged in\");  \r\n  }\r\n\r\n  logOutUser();\r\n    // console.log(\"Flag:\", flag);\r\n\r\n  // State variable that will hold username value\r\n  // const [username, setUsername] = useState('');\r\n  // useEffect(() => {\r\n  //     if (username === '') {\r\n  //         setUsername(getCurrentUser);\r\n  //     }\r\n  //   }\r\n  // , [username]);\r\n  // console.log(\"USERNAME IS: \", username);\r\n\r\n\r\n\r\n  // PUT IN TEMPORARILY FOR TESTING PURPOSES\r\n  //setFlag(true);\r\n\r\n  // In this case the flag is acquired through a check box but it could also be received from other methods\r\n  // What is a Parse.User method that would help here?\r\n\r\n  return (\r\n    <div>\r\n      <ProtectedRoute\r\n        exact\r\n        path=\"/user\"\r\n        flag={good}\r\n        component={MainGood}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainHome;\r\n","import React from \"react\";\r\nimport MainHome from \"./Main/MainHome.js\";\r\nimport Login from \"./Main/Login.js\";\r\nimport { BrowserRouter as Router, Redirect, Route, Switch } from \"react-router-dom\";\r\nimport MainGood from \"./Main/MainGood.js\";\r\n\r\nexport default function Components () {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route path=\"/login\" component={Login} />\r\n        <Route path=\"/home\" component={MainHome} />\r\n        <Route path=\"/user/:username\" componenet={MainGood} />\r\n        <Redirect to=\"/login\" />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}","  import React from \"react\";\r\n  import Components from \"./Components/Components.js\";\r\n  import * as Env from \"./environments\";\r\n  import Parse from \"parse\";\r\n\r\n  Parse.initialize(Env.APPLICATION_ID, Env.JAVASCRIPT_KEY);\r\n  Parse.serverURL = Env.SERVER_URL;\r\n\r\n  const App = () => {\r\n    return <Components />;\r\n  };\r\n  \r\n  export default App;\r\n","import { StrictMode } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(\r\n  <StrictMode>\r\n    <App />\r\n  </StrictMode>,\r\n  rootElement\r\n);"],"sourceRoot":""}